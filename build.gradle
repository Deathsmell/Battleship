plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "com.github.node-gradle.node" version "2.2.4"
}

group 'by.deathsmell'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-security"
    implementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation("com.google.guava:guava:29.0-jre")
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtime('org.springframework.boot:spring-boot-devtools')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
}

/*
  Check env system and if this chose "prod" start download node and yarn and build main.js file
*/
def isProd = System.getenv("spring.profiles.active")
isProd = isProd != null ? isProd : "dev"
if (isProd.equals("prod")) {
    task taskFront(type: YarnTask) {
        args = ['build']
    }
} else {
    task taskFront(type: YarnTask) {
        args = ['start']
    }
}
//yarn_install.dependsOn(yarn_cache_clean)
//taskFront.dependsOn(yarn_install)
//processResources.dependsOn(taskFront)


node {
    download = true
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}